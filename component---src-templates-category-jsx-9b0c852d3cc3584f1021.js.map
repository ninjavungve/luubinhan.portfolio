{"version":3,"sources":["webpack:///./src/templates/category.jsx","webpack:///./data/SiteConfig.js","webpack:///./src/layout/index.jsx","webpack:///./src/components/PostListing/PostListing.jsx"],"names":["CategoryTemplate","render","category","this","props","pageContext","postEdges","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_3__","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","config","siteTitle","_components_PostListing_PostListing__WEBPACK_IMPORTED_MODULE_4__","React","Component","pageQuery","module","exports","siteTitleShort","siteTitleAlt","siteLogo","siteUrl","pathPrefix","siteDescription","siteRss","siteFBAppID","googleAnalyticsID","disqusShortname","postDefaultCategoryID","userName","userTwitter","userLocation","userAvatar","userDescription","userLinks","label","url","iconClassName","copyright","themeColor","backgroundColor","toCChapters","MainLayout","children","name","content","PostListing","getPostList","postList","forEach","postEdge","push","path","node","fields","slug","tags","frontmatter","cover","date","excerpt","timeToRead","react__WEBPACK_IMPORTED_MODULE_4___default","map","post","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","key"],"mappings":"yQAOqBA,4FACnBC,kBAAS,IACCC,EAAaC,KAAKC,MAAMC,YAAxBH,SACFI,EAAYH,KAAKC,MAAMG,KAAKC,kBAAkBC,MACpD,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,sBACbJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CACEK,MAAK,sBAAwBd,EAAxB,OAAuCe,IAAOC,YAErDR,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAab,UAAWA,UAVYc,IAAMC,WAkBvCC,EAAS,gCCzBtBC,EAAOC,QAAU,CACfN,UAAW,uBACXO,eAAgB,WAChBC,aAAc,sFACdC,SAAU,uBACVC,QAAS,8BACTC,WAAY,aACZC,gBAAiB,qBACjBC,QAAS,WACTC,YAAa,kBACbC,kBAAmB,gBACnBC,gBAAiB,gBACjBC,sBAAuB,QACvBC,SAAU,WACVC,YAAa,YACbC,aAAc,wBACdC,WAAY,gKACZC,gBAAiB,sFAEjBC,UAAW,CACT,CACEC,MAAO,SACPC,IAAK,+BACLC,cAAe,UAEjB,CACEF,MAAO,WACPC,IAAK,8DACLC,cAAe,YAEjB,CACEF,MAAO,UACPC,IAAK,gCACLC,cAAe,WAEjB,CACEF,MAAO,UACPC,IAAK,+BACLC,cAAe,YAGnBC,UAAW,6BACXC,WAAY,UACZC,gBAAiB,UAEjBC,YAAa,CAAC,GAAI,YAAa,wJCvCZC,oGACnBhD,kBAAS,IACCiD,EAAa/C,KAAKC,MAAlB8C,SACR,OACExC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,KACED,EAAAC,EAAAC,cAAA,QAAMuC,KAAK,cAAcC,QAASnC,IAAOa,mBAE1CoB,OAR+B9B,IAAMC,kICHxCgC,oGACJC,uBACE,IAAMC,EAAW,GAYjB,OAXApD,KAAKC,MAAME,UAAUkD,QAAQ,SAAAC,GAC3BF,EAASG,KAAK,CACZC,KAAMF,EAASG,KAAKC,OAAOC,KAC3BC,KAAMN,EAASG,KAAKI,YAAYD,KAChCE,MAAOR,EAASG,KAAKI,YAAYC,MACjCjD,MAAOyC,EAASG,KAAKI,YAAYhD,MACjCkD,KAAMT,EAASG,KAAKC,OAAOK,KAC3BC,QAASV,EAASG,KAAKO,QACvBC,WAAYX,EAASG,KAAKQ,eAGvBb,KAETtD,kBACE,IAAMsD,EAAWpD,KAAKmD,cACtB,OACEe,EAAA1D,EAAAC,cAAA,WAEE2C,EAASe,IAAI,SAAAC,GAAI,OACfF,EAAA1D,EAAAC,cAAC4D,EAAA,KAAD,CAAMC,GAAIF,EAAKZ,KAAMe,IAAKH,EAAKvD,OAC7BqD,EAAA1D,EAAAC,cAAA,UAAK2D,EAAKvD,eAvBII,IAAMC,WA+BjBgC","file":"component---src-templates-category-jsx-9b0c852d3cc3584f1021.js","sourcesContent":["import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport { graphql } from \"gatsby\";\r\nimport Layout from \"../layout\";\r\nimport PostListing from \"../components/PostListing/PostListing\";\r\nimport config from \"../../data/SiteConfig\";\r\n\r\nexport default class CategoryTemplate extends React.Component {\r\n  render() {\r\n    const { category } = this.props.pageContext;\r\n    const postEdges = this.props.data.allMarkdownRemark.edges;\r\n    return (\r\n      <Layout>\r\n        <div className=\"category-container\">\r\n          <Helmet\r\n            title={`Posts in category \"${category}\" | ${config.siteTitle}`}\r\n          />\r\n          <PostListing postEdges={postEdges} />\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n/* eslint no-undef: \"off\" */\r\nexport const pageQuery = graphql`\r\n  query CategoryPage($category: String) {\r\n    allMarkdownRemark(\r\n      limit: 1000\r\n      sort: { fields: [fields___date], order: DESC }\r\n      filter: { frontmatter: { category: { eq: $category } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n            date\r\n          }\r\n          excerpt\r\n          timeToRead\r\n          frontmatter {\r\n            title\r\n            tags\r\n            cover\r\n            date\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","module.exports = {\n  siteTitle: \"luckyluu - Portfolio\", // Site title.\n  siteTitleShort: \"luckyluu\", // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\n  siteTitleAlt: \"Front-End Developer live in Ho Chi Minh City, a photography geek, and a music lover\", // Alternative site title for SEO.\n  siteLogo: \"/logos/logo-1024.png\", // Logo used for SEO and manifest.\n  siteUrl: \"https://luubinhan.github.io\",\n  pathPrefix: \"/portfolio\",\n  siteDescription: \"luckyluu portfolio\",\n  siteRss: \"/rss.xml\", // Path to the RSS file.\n  siteFBAppID: \"445556375516928\", // FB Application ID for using app insights\n  googleAnalyticsID: \"UA-29685098-2\", // GA tracking ID.\n  disqusShortname: \"luckyluu-blog\", // Disqus shortname.\n  postDefaultCategoryID: \"React\", // Default category for posts.\n  userName: \"luckyluu\", // Username to display in the author segment.\n  userTwitter: \"luubinhan\", // Optionally renders \"Follow Me\" in the UserInfo segment.\n  userLocation: \"Hồ Chí Minh, Việt Nam\", // User location to display in the author segment.\n  userAvatar: \"https://media.licdn.com/dms/image/C4E03AQFQg5eGuqMWkA/profile-displayphoto-shrink_200_200/0?e=1543449600&v=beta&t=KSe235f95l89g6FW6ICJ91sd2uBfmBXKLosm3pfcwzo\", // User avatar to display in the author segment.\n  userDescription: \"Front-End Developer live in Ho Chi Minh City, a photography geek, and a music lover\", // User description to display in the author segment.\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\n  userLinks: [\n    {\n      label: \"GitHub\",\n      url: \"https://github.com/luubinhan\",\n      iconClassName: \"github\"\n    },\n    {\n      label: \"LinkedIn\",\n      url: \"https://www.linkedin.com/in/l%C6%B0u-b%C3%ACnh-an-03556553/\",\n      iconClassName: \"linkedin\"\n    },\n    {\n      label: \"Twitter\",\n      url: \"https://twitter.com/luubinhan\",\n      iconClassName: \"twitter\"\n    },\n    {\n      label: \"Codepen\",\n      url: \"https://codepen.io/luckyluu/\",\n      iconClassName: \"codepen\"\n    }\n  ],\n  copyright: \"Copyright © 2018. luckyluu\", // Copyright string for the footer of the website and RSS feed.\n  themeColor: \"#01A1B1\", // Used for setting manifest and progress theme colors.\n  backgroundColor: \"#e0e0e0\", // Used for setting manifest background color.\n  // TODO: Move this literally anywhere better.\n  toCChapters: [\"\", \"Chapter 1\", \"Chapter 2\"] // Used to generate the Table Of Contents. Index 0 should be blank.\n};\n","import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport config from \"../../data/SiteConfig\";\r\n\r\nimport \"../styles/main.scss\";\r\n\r\nexport default class MainLayout extends React.Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <div>\r\n        <Helmet>\r\n          <meta name=\"description\" content={config.siteDescription} />\r\n        </Helmet>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\n\r\nclass PostListing extends React.Component {\r\n  getPostList() {\r\n    const postList = [];\r\n    this.props.postEdges.forEach(postEdge => {\r\n      postList.push({\r\n        path: postEdge.node.fields.slug,\r\n        tags: postEdge.node.frontmatter.tags,\r\n        cover: postEdge.node.frontmatter.cover,\r\n        title: postEdge.node.frontmatter.title,\r\n        date: postEdge.node.fields.date,\r\n        excerpt: postEdge.node.excerpt,\r\n        timeToRead: postEdge.node.timeToRead\r\n      });\r\n    });\r\n    return postList;\r\n  }\r\n  render() {\r\n    const postList = this.getPostList();\r\n    return (\r\n      <div>\r\n        {/* Your post list here. */\r\n        postList.map(post => (\r\n          <Link to={post.path} key={post.title}>\r\n            <h1>{post.title}</h1>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostListing;\r\n"],"sourceRoot":""}