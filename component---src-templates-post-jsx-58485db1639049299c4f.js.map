{"version":3,"sources":["webpack:///./src/components/UserInfo/UserInfo.jsx","webpack:///./src/components/Disqus/Disqus.jsx","webpack:///./src/components/PostTags/PostTags.jsx","webpack:///./src/components/SocialLinks/SocialLinks.jsx","webpack:///./src/templates/post.jsx","webpack:///./data/SiteConfig.js","webpack:///./src/components/SEO.js"],"names":["UserInfo","render","userTwitter","this","props","config","expanded","react_default","a","createElement","dist","username","options","count","Component","Disqus","_this","_Component","call","state","toasts","notifyAboutComment","bind","assertThisInitialized_default","onSnackbarDismiss","slice","setState","push","text","postNode","disqusShortname","post","frontmatter","url","urljoin","siteUrl","pathPrefix","fields","slug","main_default","shortname","identifier","title","category_id","onNewComment","PostTags","tags","className","map","tag","gatsby_browser_entry","key","style","textDecoration","to","kebabCase_default","SocialLinks","_this$props","postPath","mobile","iconSize","renderShareCount","filter","RedditShareButton","RedditIcon","round","size","RedditShareCount","TwitterShareButton","TwitterIcon","GooglePlusShareButton","GooglePlusIcon","GooglePlusShareCount","FacebookShareButton","quote","excerpt","FacebookIcon","FacebookShareCount","LinkedinShareButton","description","LinkedinIcon","LinkedinShareCount","TelegramShareButton","TelegramIcon","PostTemplate","pageContext","data","markdownRemark","id","postDefaultCategoryID","Helmet_default","siteTitle","SEO","postSEO","dangerouslySetInnerHTML","__html","html","components_PostTags_PostTags","components_SocialLinks_SocialLinks","components_UserInfo_UserInfo","components_Disqus_Disqus","React","pageQuery","module","exports","siteTitleShort","siteTitleAlt","siteLogo","siteDescription","siteRss","siteFBAppID","googleAnalyticsID","userName","userLocation","userAvatar","userDescription","userLinks","label","iconClassName","copyright","themeColor","backgroundColor","toCChapters","image","postURL","postMeta","cover","blogURL","schemaOrgJSONLD","@context","@type","name","alternateName","itemListElement","position","item","@id","headline","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","content","type","JSON","stringify","property"],"mappings":"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","file":"component---src-templates-post-jsx-58485db1639049299c4f.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Follow } from \"react-twitter-widgets\";\r\n\r\nclass UserInfo extends Component {\r\n  render() {\r\n    const { userTwitter } = this.props.config;\r\n    const { expanded } = this.props;\r\n    return (\r\n      <Follow\r\n        username={userTwitter}\r\n        options={{ count: expanded ? true : \"none\" }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserInfo;\r\n","import React, { Component } from \"react\";\r\nimport ReactDisqusComments from \"react-disqus-comments\";\r\nimport urljoin from \"url-join\";\r\nimport config from \"../../../data/SiteConfig\";\r\n\r\nclass Disqus extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      toasts: []\r\n    };\r\n    this.notifyAboutComment = this.notifyAboutComment.bind(this);\r\n    this.onSnackbarDismiss = this.onSnackbarDismiss.bind(this);\r\n  }\r\n\r\n  onSnackbarDismiss() {\r\n    const [, ...toasts] = this.state.toasts;\r\n    this.setState({ toasts });\r\n  }\r\n  notifyAboutComment() {\r\n    const toasts = this.state.toasts.slice();\r\n    toasts.push({ text: \"New comment available!\" });\r\n    this.setState({ toasts });\r\n  }\r\n  render() {\r\n    const { postNode } = this.props;\r\n    if (!config.disqusShortname) {\r\n      return null;\r\n    }\r\n    const post = postNode.frontmatter;\r\n    const url = urljoin(\r\n      config.siteUrl,\r\n      config.pathPrefix,\r\n      postNode.fields.slug\r\n    );\r\n    return (\r\n      <ReactDisqusComments\r\n        shortname={config.disqusShortname}\r\n        identifier={post.title}\r\n        title={post.title}\r\n        url={url}\r\n        category_id={post.category_id}\r\n        onNewComment={this.notifyAboutComment}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Disqus;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"gatsby\";\r\n\r\nclass PostTags extends Component {\r\n  render() {\r\n    const { tags } = this.props;\r\n    return (\r\n      <div className=\"post-tag-container\">\r\n        {tags &&\r\n          tags.map(tag => (\r\n            <Link\r\n              key={tag}\r\n              style={{ textDecoration: \"none\" }}\r\n              to={`/tags/${_.kebabCase(tag)}`}\r\n            >\r\n              <button>{tag}</button>\r\n            </Link>\r\n          ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostTags;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  FacebookShareButton,\r\n  GooglePlusShareButton,\r\n  LinkedinShareButton,\r\n  TwitterShareButton,\r\n  TelegramShareButton,\r\n  RedditShareButton,\r\n  FacebookShareCount,\r\n  GooglePlusShareCount,\r\n  LinkedinShareCount,\r\n  RedditShareCount,\r\n  FacebookIcon,\r\n  TwitterIcon,\r\n  TelegramIcon,\r\n  GooglePlusIcon,\r\n  LinkedinIcon,\r\n  RedditIcon\r\n} from \"react-share\";\r\nimport urljoin from \"url-join\";\r\nimport config from \"../../../data/SiteConfig\";\r\nimport \"./SocialLinks.css\";\r\n\r\nclass SocialLinks extends Component {\r\n  render() {\r\n    const { postNode, postPath, mobile } = this.props;\r\n    const post = postNode.frontmatter;\r\n    const url = urljoin(config.siteUrl, config.pathPrefix, postPath);\r\n    const iconSize = mobile ? 36 : 48;\r\n    const filter = count => (count > 0 ? count : \"\");\r\n    const renderShareCount = count => (\r\n      <div className=\"share-count\">{filter(count)}</div>\r\n    );\r\n\r\n    return (\r\n      <div className=\"social-links\">\r\n        <RedditShareButton url={url} title={post.title}>\r\n          <RedditIcon round size={iconSize} />\r\n          <RedditShareCount url={url}>\r\n            {count => renderShareCount(count)}\r\n          </RedditShareCount>\r\n        </RedditShareButton>\r\n        <TwitterShareButton url={url} title={post.title}>\r\n          <TwitterIcon round size={iconSize} />\r\n        </TwitterShareButton>\r\n        <GooglePlusShareButton url={url}>\r\n          <GooglePlusIcon round size={iconSize} />\r\n          <GooglePlusShareCount url={url}>\r\n            {count => renderShareCount(count)}\r\n          </GooglePlusShareCount>\r\n        </GooglePlusShareButton>\r\n        <FacebookShareButton url={url} quote={postNode.excerpt}>\r\n          <FacebookIcon round size={iconSize} />\r\n          <FacebookShareCount url={url}>\r\n            {count => renderShareCount(count)}\r\n          </FacebookShareCount>\r\n        </FacebookShareButton>\r\n        <LinkedinShareButton\r\n          url={url}\r\n          title={post.title}\r\n          description={postNode.excerpt}\r\n        >\r\n          <LinkedinIcon round size={iconSize} />\r\n          <LinkedinShareCount url={url}>\r\n            {count => renderShareCount(count)}\r\n          </LinkedinShareCount>\r\n        </LinkedinShareButton>\r\n        <TelegramShareButton url={url}>\r\n          <TelegramIcon round size={iconSize} />\r\n        </TelegramShareButton>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SocialLinks;\r\n","import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport { graphql } from \"gatsby\";\r\nimport UserInfo from \"../components/UserInfo/UserInfo\";\r\nimport Disqus from \"../components/Disqus/Disqus\";\r\nimport PostTags from \"../components/PostTags/PostTags\";\r\nimport SocialLinks from \"../components/SocialLinks/SocialLinks\";\r\nimport SEO from \"../components/SEO\";\r\nimport config from \"../../data/SiteConfig\";\r\nimport \"./b16-tomorrow-dark.css\";\r\nimport \"./post.css\";\r\n\r\nexport default class PostTemplate extends React.Component {\r\n  render() {\r\n    const { slug } = this.props.pageContext;\r\n    const postNode = this.props.data.markdownRemark;\r\n    const post = postNode.frontmatter;\r\n    if (!post.id) {\r\n      post.id = slug;\r\n    }\r\n    if (!post.category_id) {\r\n      post.category_id = config.postDefaultCategoryID;\r\n    }\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Helmet>\r\n            <title>{`${post.title} | ${config.siteTitle}`}</title>\r\n          </Helmet>\r\n          <SEO postPath={slug} postNode={postNode} postSEO />\r\n          <div>\r\n            <h1>{post.title}</h1>\r\n            <div dangerouslySetInnerHTML={{ __html: postNode.html }} />\r\n            <div className=\"post-meta\">\r\n              <PostTags tags={post.tags} />\r\n              <SocialLinks postPath={slug} postNode={postNode} />\r\n            </div>\r\n            <UserInfo config={config} />\r\n            <Disqus postNode={postNode} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/* eslint no-undef: \"off\" */\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      timeToRead\r\n      excerpt\r\n      frontmatter {\r\n        title\r\n        cover\r\n        date\r\n        category\r\n        tags\r\n      }\r\n      fields {\r\n        nextTitle\r\n        nextSlug\r\n        prevTitle\r\n        prevSlug\r\n        slug\r\n        date\r\n      }\r\n    }\r\n  }\r\n`;\r\n","module.exports = {\n  siteTitle: \"luckyluu - Portfolio\", // Site title.\n  siteTitleShort: \"luckyluu\", // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\n  siteTitleAlt: \"Front-End Developer live in Ho Chi Minh City, a photography geek, and a music lover\", // Alternative site title for SEO.\n  siteLogo: \"/logos/logo-1024.png\", // Logo used for SEO and manifest.\n  siteUrl: \"https://luubinhan.github.io\",\n  pathPrefix: \"/portfolio\",\n  siteDescription: \"luckyluu portfolio\",\n  siteRss: \"/rss.xml\", // Path to the RSS file.\n  siteFBAppID: \"445556375516928\", // FB Application ID for using app insights\n  googleAnalyticsID: \"UA-29685098-2\", // GA tracking ID.\n  disqusShortname: \"luckyluu-blog\", // Disqus shortname.\n  postDefaultCategoryID: \"React\", // Default category for posts.\n  userName: \"luckyluu\", // Username to display in the author segment.\n  userTwitter: \"luubinhan\", // Optionally renders \"Follow Me\" in the UserInfo segment.\n  userLocation: \"Hồ Chí Minh, Việt Nam\", // User location to display in the author segment.\n  userAvatar: \"https://media.licdn.com/dms/image/C4E03AQFQg5eGuqMWkA/profile-displayphoto-shrink_200_200/0?e=1543449600&v=beta&t=KSe235f95l89g6FW6ICJ91sd2uBfmBXKLosm3pfcwzo\", // User avatar to display in the author segment.\n  userDescription: \"Front-End Developer live in Ho Chi Minh City, a photography geek, and a music lover\", // User description to display in the author segment.\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\n  userLinks: [\n    {\n      label: \"GitHub\",\n      url: \"https://github.com/luubinhan\",\n      iconClassName: \"github\"\n    },\n    {\n      label: \"LinkedIn\",\n      url: \"https://www.linkedin.com/in/l%C6%B0u-b%C3%ACnh-an-03556553/\",\n      iconClassName: \"linkedin\"\n    },\n    {\n      label: \"Twitter\",\n      url: \"https://twitter.com/luubinhan\",\n      iconClassName: \"twitter\"\n    },\n    {\n      label: \"Codepen\",\n      url: \"https://codepen.io/luckyluu/\",\n      iconClassName: \"codepen\"\n    }\n  ],\n  copyright: \"Copyright © 2018. luckyluu\", // Copyright string for the footer of the website and RSS feed.\n  themeColor: \"#01A1B1\", // Used for setting manifest and progress theme colors.\n  backgroundColor: \"#e0e0e0\", // Used for setting manifest background color.\n  // TODO: Move this literally anywhere better.\n  toCChapters: [\"\", \"Chapter 1\", \"Chapter 2\"] // Used to generate the Table Of Contents. Index 0 should be blank.\n};\n","import React, { Component } from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport urljoin from \"url-join\";\r\nimport config from \"../../data/SiteConfig\";\r\n\r\nclass SEO extends Component {\r\n  render() {\r\n    const { postNode, postPath, postSEO } = this.props;\r\n    let title;\r\n    let description;\r\n    let image;\r\n    let postURL;\r\n    if (postSEO) {\r\n      const postMeta = postNode.frontmatter;\r\n      ({ title } = postMeta);\r\n      description = postMeta.description\r\n        ? postMeta.description\r\n        : postNode.excerpt;\r\n      image = postMeta.cover;\r\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath);\r\n    } else {\r\n      title = config.siteTitle;\r\n      description = config.siteDescription;\r\n      image = config.siteLogo;\r\n    }\r\n\r\n    image = urljoin(config.siteUrl, config.pathPrefix, image);\r\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix);\r\n    const schemaOrgJSONLD = [\r\n      {\r\n        \"@context\": \"http://schema.org\",\r\n        \"@type\": \"WebSite\",\r\n        url: blogURL,\r\n        name: title,\r\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\r\n      }\r\n    ];\r\n    if (postSEO) {\r\n      schemaOrgJSONLD.push(\r\n        {\r\n          \"@context\": \"http://schema.org\",\r\n          \"@type\": \"BreadcrumbList\",\r\n          itemListElement: [\r\n            {\r\n              \"@type\": \"ListItem\",\r\n              position: 1,\r\n              item: {\r\n                \"@id\": postURL,\r\n                name: title,\r\n                image\r\n              }\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          \"@context\": \"http://schema.org\",\r\n          \"@type\": \"BlogPosting\",\r\n          url: blogURL,\r\n          name: title,\r\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\r\n          headline: title,\r\n          image: {\r\n            \"@type\": \"ImageObject\",\r\n            url: image\r\n          },\r\n          description\r\n        }\r\n      );\r\n    }\r\n    return (\r\n      <Helmet>\r\n        {/* General tags */}\r\n        <meta name=\"description\" content={description} />\r\n        <meta name=\"image\" content={image} />\r\n\r\n        {/* Schema.org tags */}\r\n        <script type=\"application/ld+json\">\r\n          {JSON.stringify(schemaOrgJSONLD)}\r\n        </script>\r\n\r\n        {/* OpenGraph tags */}\r\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\r\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\r\n        <meta property=\"og:title\" content={title} />\r\n        <meta property=\"og:description\" content={description} />\r\n        <meta property=\"og:image\" content={image} />\r\n        <meta\r\n          property=\"fb:app_id\"\r\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\r\n        />\r\n\r\n        {/* Twitter Card tags */}\r\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\r\n        <meta\r\n          name=\"twitter:creator\"\r\n          content={config.userTwitter ? config.userTwitter : \"\"}\r\n        />\r\n        <meta name=\"twitter:title\" content={title} />\r\n        <meta name=\"twitter:description\" content={description} />\r\n        <meta name=\"twitter:image\" content={image} />\r\n      </Helmet>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SEO;\r\n"],"sourceRoot":""}